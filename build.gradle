buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.11.+'
    }
}
apply plugin: 'android'
apply plugin: 'robolectric'

repositories {
    mavenCentral()
}
dependencies {
    compile project(':NearField')
    compile 'org.apache.commons:commons-lang3:3.3.2'
}

android {
    compileSdkVersion 'android-19'
    buildToolsVersion '20.0.0'

    signingConfigs {
        release {
            storeFile file("dnfc.keystore")
            keyAlias "dnfc"
        }
    }

    buildTypes {
        release {
            runProguard false
            signingConfig signingConfigs.release
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }

    defaultConfig {
        minSdkVersion 10
    }

    sourceSets {
        defaultConfig {
            testApplicationId 'com.dangerousthings.nfc.tests'
        }

        main {
            assets.srcDirs = ['assets']
            res.srcDirs = ['res']
            aidl.srcDirs = ['src']
            resources.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            java.srcDirs = ['src']
            manifest.srcFile 'AndroidManifest.xml'
        }

        instrumentTest.setRoot('tests')
        instrumentTest.java.srcDirs = ['tests/src']
    }
}

def promptForPassword(msg) {
    return new String(System.console().readPassword("\r\n    [input] $msg"))
}

task promptForReleaseKeyPassword << {
    if (!android.signingConfigs.release.storePassword) {
        android.signingConfigs.release.storePassword = promptForPassword("Please enter keystore password (store:$android.signingConfigs.release.storeFile):")
    }

    if (!android.signingConfigs.release.keyPassword) {
        android.signingConfigs.release.keyPassword = promptForPassword("Please enter password for alias '$android.signingConfigs.release.keyAlias':")
    }
}

tasks.whenTaskAdded { task -> 
    if (task.name == 'validateReleaseSigning') {
        task.dependsOn promptForReleaseKeyPassword
    }
}
